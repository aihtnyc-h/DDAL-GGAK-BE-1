# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

# Repo Action 페이지에 나타날 이름 
name: Java CI with Gradle CI/CD

# Event Trigger
# master branch에 push 또는 pull request가 발생할 경우 동작
# branch 단위 외에도, tag나 cron 식 등을 사용할 수 있음 
on:
  push:
    branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
permissions:
  contents: read  
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: ddal-ggak-codedeploy-app
  CODE_DEPLOY_APPLICATION_NAME: codedeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: codedeploy_g
  ZIP_NAME: zip -r ./finalproject.zip .
  APPLICATION: ./finalproject/src/main/resources/application.yml
jobs:
    build:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v2
        # (2) application.properties 추가
        - run: touch ./finalproject/src/main/resources/application.yml
        - run: echo "${{ secrets.APPLICATION }}" > ./finalproject/src/main/resources/application.yml
        - run: cat ./finalproject/src/main/resources/application.yml
        
        - name: Set up JDK 11
          uses: actions/setup-java@v1
          with:
            java-version: 11
            cache: gradle
    

    
        - name: Grant execute permission for gradlew
          run: chmod +x gradlew
          
        - name: Make Directory
          run: mkdir dist
#         - name: Grant execute permission for gradlew
#           run: chmod +x gradlew
#         - name: Build sith Gradle
#           run: ./gradlew build
# #           shell: bash
        - name: Build with Gradle
          uses: gradle/gradle-build-action@v2
          with:
            gradle-version: 7.5.1
            arguments: build
#         - name: Grant execute permission for gradlew
#           run: chmod +x gradlew
                  

#        #Jar 파일 복사
#         - name: Copy Jar
#           run: cp ./build/libs/*.jar ./deploy     
    

        - name: Make zip file
          run: zip -r ./$ddal-ggak-codedeploy-app.zip .
          shell: bash
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

#               AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#               AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#               AWS_REGION: ap-nortgeast-2
#               AWS_REGION: ${{ secrets.AWS_REGION }}

#         - name: Upload to S3
#           run: aws s3 cp 
#             --region ap-northeast-2 ./ddal-ggak-codedeploy-app_build.zip s3://ddal-ggak-codedeploy-app_build.zip
#             --acl private ./ddal-ggak-codedeploy-app.zip s3://ddal-ggak-codedeploy-app/
    # (5) 빌드 결과물을 S3 버킷에 업로드
        - name: Upload to AWS S3
          run: |
            aws deploy push \
              --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
              --ignore-hidden-files \
              --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
              --source .
        # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
        - name: Deploy to AWS EC2 from S3
          run: |
            aws deploy create-deployment \
              --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
              --deployment-config-name CodeDeployDefault.AllAtOnce \
              --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
              --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
